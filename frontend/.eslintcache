[{"/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/index.js":"1","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/App.js":"2","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/reportWebVitals.js":"3","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/Header.js":"4","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/Recipe.js":"5","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/Cart.js":"6","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/About.js":"7","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/Home.js":"8"},{"size":500,"mtime":1609439069121,"results":"9","hashOfConfig":"10"},{"size":1928,"mtime":1609823047186,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609357234152,"results":"12","hashOfConfig":"10"},{"size":424,"mtime":1609735618861,"results":"13","hashOfConfig":"10"},{"size":5921,"mtime":1609822504919,"results":"14","hashOfConfig":"10"},{"size":436,"mtime":1609817959551,"results":"15","hashOfConfig":"10"},{"size":1328,"mtime":1609734885953,"results":"16","hashOfConfig":"10"},{"size":2017,"mtime":1609722299508,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"yn316x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/index.js",[],["39","40"],"/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/App.js",["41","42"],"import './App.css';\nimport Header from './Header.js';\nimport Cart from './Cart.js';\nimport Profile from './About.js';\nimport Home from './Home.js';\nimport Recipe from './Recipe.js';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport { useState} from 'react';\nimport React from 'react';\n\nclass App extends React.Component {\n\n\n   constructor(props){\n      super(props);\n      this.state={ cart: [], ingredients: []}\n   }\n//have to pass this as a prop to Cart\nemptyCart = () => {\n\n   this.setState({cart : []});\n   console.log(\"state updated\");\n}\n\nupdateIngredients = (ingredients, servings) => {\n   let currents = this.state.ingredients;//Object\n   for (let ing in ingredients){\n      if (ing in currents){\n         currents[ing] += ingredients[ing] * servings;//update an ing\n      }else{\n         currents[ing] = ingredients[ing] * servings;//add new ing\n      }\n   }\n   this.updateCart(currents);\n\n}\n\n\n//updateCart (Array of ingredient Objects)\n//does not update amounts for duplicates\nupdateCart = (ingredients) => {\n  let newCart = []; \n   for(let item in ingredients){\n          let num = ingredients[item];\n          \n          \n          newCart.push(\n          <li>\n          {ingredients[item] } {item}\n          </li>)\n   };\n/*\n  ingredients.map(ing =>\n      \n      newCart.push(`${ingredients.ing} ${ing}`),\n    //newCart.push(ing),\n   );\n*/   this.setState({cart: newCart})\n}\n\nrender(){\nreturn (\n  <BrowserRouter>\n    <div className=\"App\">\n      <Header/>\n      <main>\n  \n      <Switch> \n        <Route exact path='/about'>\n         <Profile />\n        </Route>\n\n        <Route path='/recipe'>\n          <Recipe  updateIngredients={this.updateIngredients}/>\n        </Route>\n\n        <Route path='/'>\n         <Home />\n        </Route>\n\n\n      </Switch>\n\n         <Cart cart={this.state.cart} emptyCart={this.emptyCart}/>\n      </main>\n\n   </div>\n  </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/reportWebVitals.js",[],"/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/Header.js",[],"/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/Recipe.js",["43","44","45"],"import styles from './Recipe.module.css';\nimport { useState } from 'react';\nimport React from 'react';\n\n\n\n\nclass Recipe3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n\n\n  componentDidMount() {\n\n     const recipeName = window.location.pathname;\n     const path = 'http://localhost:3000/api' + recipeName;\nconsole.log(path);\n\n     fetch(path)\n        .then(res => res.json())\n        .then(data => this.setState({ ...data[0] }));\n            //... is the spread operator; expands an iterable\n            // have to index 0 for some reason\n\n   }\n\n   //change serving\n     changeServings(increment){\n       this.setState(state => (\n         {servings: Math.max(this.state.servings + increment, 1)}\n       ))\n     }      \n \n   //post rating\n   postRating = () => {\n   \n   const ratingSelect = document.getElementById('select-rating');\n   const rating = +(ratingSelect.options[ratingSelect.selectedIndex].value);\n \n   const data = {\n     id: this.state._id,\n     rating: rating\n   };\n \n   fetch(URL, {\n     method: 'POST',\n     body: JSON.stringify(data)\n   })\n   .then(() => {\n     this.state.ratings.push(rating);\n     document.getElementById('rating').innerText = this.avgRatings(this.state.ratings);\n   });\n   \n  \n  }\n\n\n  avgRatings = (ratings) => {\n\n    let sum = 0;\n    for ( var i in ratings){\n      sum += +(ratings[i]);\n    }\n    return (sum / ratings.length).toFixed(2);\n  }\n\n  render() {\n//ingredients\n     let ingredients = [];\n     if (this.state.ingredients){\n\n       for(let item in this.state.ingredients){\n          ingredients.push(\n          <li> \n          {this.state.ingredients[item] * this.state.servings} {item}\n          </li>)\n\n       }\n     }\n//instructions\n     let instructions = [];\n     if (this.state.instructions){\n       instructions = this.state.instructions.map(step => <li>{step}</li> );\n\n     }\n\n//avg rating\n     let avg_rating = 0;\n     if (this.state.ratings){\n        for (let i=0; i < this.state.ratings.length; i++){\n           avg_rating+=this.state.ratings[i];\n      \n        }\n        avg_rating = avg_rating/this.state.ratings.length;\n     }\n\n\n    return (\n       <div className={styles.main}>\n         <h1 className = {styles.title}>{this.state.title} </h1>\n         <div className = {styles.intro}>\n            \n            <div className={styles.info}>\n               <p className= {styles.desc}> {this.state.desc}\n               </p>\n               <h4>Servings</h4>\n               <div className={styles.buttons}>\n                  <button className={styles.minus} onClick={()=>this.changeServings(-1)}> – </button>\n                  <span className={styles.num_servings}>{this.state.servings}</span>\n                  <button className={styles.plus}  onClick={()=>this.changeServings(+1)}> + </button>\n               </div>\n               <div id=\"ratings\"><span id=\"rating\">{(avg_rating.toFixed(2))}</span> ★</div>\n\n               \n                <div class=\"rating\">\n                  <label for=\"select-rating\" id=\"rating-label\">Rate Me!</label> <br/>\n                  <select id=\"select-rating\">\n                    <option selected hidden disabled>Select Rating</option>\n                    <option value=\"1\">1 ★</option>\n                    <option value=\"2\">2 ★</option>\n                    <option value=\"3\">3 ★</option>\n                    <option value=\"4\">4 ★</option>\n                    <option value=\"5\">5 ★</option>\n                  </select>\n                  <button id=\"post-rating\" onClick={() => this.postRating()}> Post Rating </button>\n                  <button onClick={() => this.props.updateIngredients(this.state.ingredients, this.state.servings )}> Add to Cart </button>\n\n                </div>\n               \n            </div>\n            \n           <img className={styles.food_img} src={ process.env.PUBLIC_URL + '/' + this.state.picture} ></img> \n\n         </div>\n         \n         <h3>Ingredients</h3>\n         <ul className={styles.ingredients}>\n           {ingredients} \n         </ul>\n         \n         <h3>Instructions</h3>\n         <ol className={styles.instructions}>\n           {instructions} \n         </ol>\n         \n      </div>\n     \n\n\n    );\n  }\n}\n\n\n\nfunction Recipe2() {\n   return (\n   \n      <div className={styles.main}>\n         <h1 className = {styles.title}> </h1>\n         <div className = {styles.intro}>\n            \n            <div className={styles.info}>\n               <p className= {styles.desc}>\n               </p>\n               <h4>Servings</h4>\n               <div className={styles.buttons}>\n                  <button className={styles.minus}> – </button>\n                  <span className={styles.num_servings}>1</span>\n                  <button className={styles.plus}> + </button>\n               </div>\n               <div id=\"ratings\"><span id=\"rating\"></span> ★</div>\n\n               \n                <div class=\"rating\">\n                  <label for=\"select-rating\" id=\"rating-label\">Rate Me!</label> <br/>\n                  <select id=\"select-rating\">\n                    <option selected hidden disabled>Select Rating</option>\n                    <option value=\"1\">1 ★</option>\n                    <option value=\"2\">2 ★</option>\n                    <option value=\"3\">3 ★</option>\n                    <option value=\"4\">4 ★</option>\n                    <option value=\"5\">5 ★</option>\n                  </select>\n                  <button id=\"post-rating\">Post Rating</button>\n                </div>\n               \n            </div>\n            \n           <div className={styles.food_img} > img</div> \n         </div>\n         \n         <h3>Ingredients</h3>\n         <ul className={styles.ingredients}>\n            \n         </ul>\n         \n         <h3>Instructions</h3>\n         <ol className={styles.instructions}>\n            \n         </ol>\n         \n      </div>\n     \n  \n        ) \n\n}\n\nexport default Recipe3;\n","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/Cart.js",[],"/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/About.js",["46"],"import pic from './images/me-and-gma.JPG';\nimport styles from './About.module.css';\n\nfunction Profile(){\n   return (\n\n     <div>\n         <h1 class = \"title\" >About the Chef</h1>\n         <p>Hello there. I definitely wouldn't call myself a cook or claim\n         any real skill within the kitchen, but I have at least learned enough\n         throughout my life to sustain a somewhat healthly diet. </p>\n         \n         <p>That being said, I tried to just pick some recipes that would be easy to understand.</p>\n         \n         <h2>Life</h2>\n         \n         <p> I grew up paying some limited attention to my mother and grandma cook.\n         I also attained skill in making random things that I like that weren't\n         necessarily things my family would be making for household dinner.</p>\n         \n         <p>Anyway, now I have started to learn more recipes from my mom and auntie\n         since we cook a lot more at home. I don't quite have all those meals\n         quite down yet, so the page still consists of mediocre quasi recipes,\n         if you could even call them that. Enjoy.</p>\n       \n            \n            \n        \n            <p>view below: my grandma and me</p>\n            \n         <img  className={styles.about_pic} src={pic}></img>\n         \n      </div>\n\n   )\n}\n\nexport default Profile;\n","/Users/Horchataaa/H4I/bootcamp/bootcamp-grocery-prep/frontend/src/Home.js",["47","48","49","50","51","52","53"],"import style from './Home.module.css';\nimport styles from './Recipe.module.css';\n\nimport { Link } from 'react-router-dom';\n\nimport leaf from \"./images/leaf.png\";\nimport fish from './images/fish.png';\n\nfunction Home(){\n   return (\n      <div className={style.main}>\n         <h1 className={style.title} >This is the Grocery Prep Home Page</h1>\n   \n      <p className={style.left}>Find some \"recipes\" below, organized by skill level</p>\n         \n         <h2 className={style.left}>Recipes</h2>\n         \n            <h3>Very Low Effort</h3>\n            \n            <ul className={style.front_page}>\n               <li>\n                  <Link to = \"/recipe/5fe52e08cd16708b1801f191\">Milk Tea</Link>\n                  <img src={leaf} className={style.diet}/>\n               </li> \n               <li>\n                  <Link to = \"/recipe/5fe531d7cd16708b1801f192\">Banana Toast</Link>\n                  <img src ={leaf} className={style.diet}></img>\n               </li>\n            </ul>\n            \n            <h3>Low Effort</h3>\n\n            <ul className={style.front_page}>\n               <li>\n                  <Link to= \"/recipe/5fe533f2cd16708b1801f194\">Breakfast Croissantwich</Link>\n                  <img src ={leaf} className={style.diet}/>\n               </li>\n               <li>\n                  <Link to= \"/recipe/5fe53756cd16708b1801f196\">French Toast</Link>\n                  <img src ={leaf} className={style.diet}></img>\n               </li> \n            </ul>\n            \n            <h3>Mezzo Efforte</h3>\n\n            <ul className={style.front_page}>\n               <li>\n                  <Link to= \"/recipe/5fe5392acd16708b1801f197\">Tilapia</Link>\n                  <img src={fish} className={style.fish}></img>\n               </li> \n               <li>\n                  <Link to= \"/recipe/5fe53a13cd16708b1801f198\">Spicy Tofu Soup</Link>\n                  <img src ={leaf} className={style.diet}></img>\n               </li>\n            </ul>\n\n      </div>\n\n   )\n}\n\nexport default Home;\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":8,"column":10,"nodeType":"60","messageId":"61","endLine":8,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":44,"column":15,"nodeType":"60","messageId":"61","endLine":44,"endColumn":18},{"ruleId":"58","severity":1,"message":"59","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":18},{"ruleId":"63","severity":1,"message":"64","line":135,"column":12,"nodeType":"65","endLine":135,"endColumn":103},{"ruleId":"58","severity":1,"message":"66","line":159,"column":10,"nodeType":"60","messageId":"61","endLine":159,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":31,"column":10,"nodeType":"65","endLine":31,"endColumn":55},{"ruleId":"58","severity":1,"message":"67","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":23,"column":19,"nodeType":"65","endLine":23,"endColumn":59},{"ruleId":"63","severity":1,"message":"64","line":27,"column":19,"nodeType":"65","endLine":27,"endColumn":59},{"ruleId":"63","severity":1,"message":"64","line":36,"column":19,"nodeType":"65","endLine":36,"endColumn":60},{"ruleId":"63","severity":1,"message":"64","line":40,"column":19,"nodeType":"65","endLine":40,"endColumn":59},{"ruleId":"63","severity":1,"message":"64","line":49,"column":19,"nodeType":"65","endLine":49,"endColumn":58},{"ruleId":"63","severity":1,"message":"64","line":53,"column":19,"nodeType":"65","endLine":53,"endColumn":59},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'num' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Recipe2' is defined but never used.","'styles' is defined but never used.","no-global-assign","no-unsafe-negation"]